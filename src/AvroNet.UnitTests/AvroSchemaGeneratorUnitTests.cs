using Xunit;
using VerifyCS = AvroNet.UnitTests.Verifiers.CSharpSourceGeneratorVerifier<AvroNet.AvroGenerator>;

namespace AvroNet.UnitTests;

public class AvroSchemaGeneratorUnitTests
{
    private const string Attribute = """
        //------------------------------------------------------------------------------
        // <auto-generated>
        //     This code was generated by a tool.
        //
        //     Changes to this file may cause incorrect behavior and will be lost if
        //     the code is regenerated.
        // </auto-generated>
        //------------------------------------------------------------------------------
        #nullable enable
        namespace AvroNet;
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("AvroNet", "1.0.0.0")]
        [global::System.AttributeUsage(global::System.AttributeTargets.Class, AllowMultiple = false)]
        internal sealed class AvroClassAttribute : global::System.Attribute
        {
        }
        #nullable restore
        """;

    [Fact]
    public async Task Generator_NoCandidates_AddAttributeUnconditionally()
    {
        string code = """
            namespace Tests;

            public sealed class Program
            {
                public static void Main(string[] args)
                {
                }
            }
            """;

        await VerifyCS.VerifyGeneratorAsync(code, [], ("AvroClassAttribute.g.cs", Attribute));
    }

    [Fact]
    public async Task Generator_WithCandidates_AddProperties()
    {
        string code = """"
            using System;
            using AvroNet;

            namespace Tests.OpenClass;

            [AvroClass]
            public partial class User
            {
                public const string SchemaJson = """
                {
                   "type" : "record",
                   "namespace" : "Tests.User",
                   "name" : "User",
                   "fields" : [
                      { "name" : "Name" , "type" : "string" },
                      { "name" : "Age" , "type" : "int" },
                      { "name" : "Description" , "type" : [ "string", "null" ] },
                   ]
                }
                """;
            }
            """";

        string user = """"
            //------------------------------------------------------------------------------
            // <auto-generated>
            //     This code was generated by a tool.
            //
            //     Changes to this file may cause incorrect behavior and will be lost if
            //     the code is regenerated.
            // </auto-generated>
            //------------------------------------------------------------------------------

            namespace Tests.OpenClass
            {
                using System;
                using System.Collections.Generic;
                using System.Text;
                using global::Avro;
                using global::Avro.Specific;
                
                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("testhost", "1.11.3")]
                public partial class User : global::Avro.Specific.ISpecificRecord
                {
                    public static global::Avro.Schema _SCHEMA = global::Avro.Schema.Parse(SchemaJson);
                    private string _Name;
                    private int _Age;
                    private string _Description;
                    public virtual global::Avro.Schema Schema
                    {
                        get
                        {
                            return User._SCHEMA;
                        }
                    }
                    public string Name
                    {
                        get
                        {
                            return this._Name;
                        }
                        set
                        {
                            this._Name = value;
                        }
                    }
                    public int Age
                    {
                        get
                        {
                            return this._Age;
                        }
                        set
                        {
                            this._Age = value;
                        }
                    }
                    public string Description
                    {
                        get
                        {
                            return this._Description;
                        }
                        set
                        {
                            this._Description = value;
                        }
                    }
                    public virtual object Get(int fieldPos)
                    {
                        switch (fieldPos)
            			{
            			case 0: return this.Name;
            			case 1: return this.Age;
            			case 2: return this.Description;
            			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Get()");
            			};
                    }
                    public virtual void Put(int fieldPos, object fieldValue)
                    {
                        switch (fieldPos)
            			{
            			case 0: this.Name = (System.String)fieldValue; break;
            			case 1: this.Age = (System.Int32)fieldValue; break;
            			case 2: this.Description = (System.String)fieldValue; break;
            			default: throw new global::Avro.AvroRuntimeException("Bad index " + fieldPos + " in Put()");
            			};
                    }
                }
            }

            """";

        await VerifyCS.VerifyGeneratorAsync(code,
            ("AvroClassAttribute.g.cs", Attribute),
            ("User.AvroClass.g.cs", user));
    }
}